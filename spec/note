* Model Specs
    * gem 'shoulda-matchers'
    * gem 'shoulda-callback-matchers'

    # RSpec
    RSpec.describe ClassName, type: :model do
      describe 'associations' do
        it { should belong_to(:city) }
      end

      describe 'validations' do
        it { should validate_presence_of(:name) }
        it { should validate_uniqueness_of(:name) }
      end
    end
    ====================================================================================================================
    describe Post do
      it { is_expected.to callback(:count_comments).before(:save) }
      it { is_expected.to callback(:post_to_twitter).after(:create) }
      it { is_expected.to callback(:evaluate_if_is_should_validate).before(:validation) }
      it { is_expected.to callback(:add_some_convenience_accessors).after(:find) }

      # with conditions

      it { is_expected.to callback(:assign_something).before(:create).if(:this_is_true) }
      it { is_expected.to callback(:destroy_something_else).before(:destroy).unless(:this_is_true) }
    end

* Instance Methods
    it '#display_name' do
        response = user.display_name
        expect(response).to be_a(String)
      end
* Class Methods
     describe ClassName do
        context 'While testing .class_method' do
          it 'should return a string' do
          end
        end
      end

* Tools
    gem 'faker'
        * name (first_name, middle_name,last_name)
        * email
        * password(length, complexity)
    gem 'factory_bot_rails'
